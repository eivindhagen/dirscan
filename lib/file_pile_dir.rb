# manages the directory structure for a File Pile
class FilePileDir
  private
  def dir_structure
    [
      {path: 'filedata', doc: 'file data, named by content sha256'},
      {path: 'metadata', doc: 'meta data, catalog information for each file in the pile'},
      {path: 'logs', doc: 'log files, generated by various file pile operations'},
      {path: 'temp', doc: 'temporary files, generated by various file pile operations and removed when no longer needed'},
    ]
  end

  # create object by specifying the location of the File Pile directory (even if it doesn't exist)
  # the necessary directories will be created if they do not already exist
  public
  def initialize(filepile_root)
    @root = filepile_root

    # create filepile_root folder (unless it already exist)
    unless Dir.exist?(@root)
      FileUtils.mkdir_p(@root)
    end

    # ensure each standard sub-dir exist, or create it
    dir_structure.each do |dir|
      fullpath = File.join @root, dir[:path]
      unless Dir.exist? fullpath
        FileUtils.mkdir_p fullpath
      end
    end

  end
end
